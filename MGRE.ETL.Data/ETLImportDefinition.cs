//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace MGRE.ETL.Data
{
    public partial class ETLImportDefinition
    {
        #region Primitive Properties
    
        public virtual System.Guid ETLImportGUID
        {
            get;
            set;
        }
    
        public virtual string ImportName
        {
            get;
            set;
        }
    
        public virtual string ImportSubDirectory
        {
            get;
            set;
        }
    
        public virtual string Reason
        {
            get;
            set;
        }
    
        public virtual bool Active
        {
            get;
            set;
        }
    
        public virtual int ImportType
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<ETLImportEmail> ETLImportEmails
        {
            get
            {
                if (_eTLImportEmails == null)
                {
                    var newCollection = new FixupCollection<ETLImportEmail>();
                    newCollection.CollectionChanged += FixupETLImportEmails;
                    _eTLImportEmails = newCollection;
                }
                return _eTLImportEmails;
            }
            set
            {
                if (!ReferenceEquals(_eTLImportEmails, value))
                {
                    var previousValue = _eTLImportEmails as FixupCollection<ETLImportEmail>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupETLImportEmails;
                    }
                    _eTLImportEmails = value;
                    var newValue = value as FixupCollection<ETLImportEmail>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupETLImportEmails;
                    }
                }
            }
        }
        private ICollection<ETLImportEmail> _eTLImportEmails;
    
        public virtual ICollection<ETLImportHistory> ETLImportHistories
        {
            get
            {
                if (_eTLImportHistories == null)
                {
                    var newCollection = new FixupCollection<ETLImportHistory>();
                    newCollection.CollectionChanged += FixupETLImportHistories;
                    _eTLImportHistories = newCollection;
                }
                return _eTLImportHistories;
            }
            set
            {
                if (!ReferenceEquals(_eTLImportHistories, value))
                {
                    var previousValue = _eTLImportHistories as FixupCollection<ETLImportHistory>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupETLImportHistories;
                    }
                    _eTLImportHistories = value;
                    var newValue = value as FixupCollection<ETLImportHistory>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupETLImportHistories;
                    }
                }
            }
        }
        private ICollection<ETLImportHistory> _eTLImportHistories;
    
        public virtual ICollection<ETLImportTablesDefinition> ETLImportTablesDefinitions
        {
            get
            {
                if (_eTLImportTablesDefinitions == null)
                {
                    var newCollection = new FixupCollection<ETLImportTablesDefinition>();
                    newCollection.CollectionChanged += FixupETLImportTablesDefinitions;
                    _eTLImportTablesDefinitions = newCollection;
                }
                return _eTLImportTablesDefinitions;
            }
            set
            {
                if (!ReferenceEquals(_eTLImportTablesDefinitions, value))
                {
                    var previousValue = _eTLImportTablesDefinitions as FixupCollection<ETLImportTablesDefinition>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupETLImportTablesDefinitions;
                    }
                    _eTLImportTablesDefinitions = value;
                    var newValue = value as FixupCollection<ETLImportTablesDefinition>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupETLImportTablesDefinitions;
                    }
                }
            }
        }
        private ICollection<ETLImportTablesDefinition> _eTLImportTablesDefinitions;

        #endregion
        #region Association Fixup
    
        private void FixupETLImportEmails(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ETLImportEmail item in e.NewItems)
                {
                    item.ETLImportDefinition = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ETLImportEmail item in e.OldItems)
                {
                    if (ReferenceEquals(item.ETLImportDefinition, this))
                    {
                        item.ETLImportDefinition = null;
                    }
                }
            }
        }
    
        private void FixupETLImportHistories(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ETLImportHistory item in e.NewItems)
                {
                    item.ETLImportDefinition = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ETLImportHistory item in e.OldItems)
                {
                    if (ReferenceEquals(item.ETLImportDefinition, this))
                    {
                        item.ETLImportDefinition = null;
                    }
                }
            }
        }
    
        private void FixupETLImportTablesDefinitions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ETLImportTablesDefinition item in e.NewItems)
                {
                    item.ETLImportDefinition = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ETLImportTablesDefinition item in e.OldItems)
                {
                    if (ReferenceEquals(item.ETLImportDefinition, this))
                    {
                        item.ETLImportDefinition = null;
                    }
                }
            }
        }

        #endregion
    }
}
