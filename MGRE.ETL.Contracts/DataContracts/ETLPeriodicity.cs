//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;


namespace MGRE.ETL.Contracts.DataContracts
{
    /*
    internal partial class ETLPeriodicity
    {
        #region Primitive Properties
    
        [DataMember]
        public int PeriodID
        {
            get;
            set;
        }
    
        [DataMember]
        public string Description
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<ETLExportSchedule> ETLExportSchedules
        {
            get
            {
                if (_eTLExportSchedules == null)
                {
                    var newCollection = new FixupCollection<ETLExportSchedule>();
                    newCollection.CollectionChanged += FixupETLExportSchedules;
                    _eTLExportSchedules = newCollection;
                }
                return _eTLExportSchedules;
            }
            set
            {
                if (!ReferenceEquals(_eTLExportSchedules, value))
                {
                    var previousValue = _eTLExportSchedules as FixupCollection<ETLExportSchedule>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupETLExportSchedules;
                    }
                    _eTLExportSchedules = value;
                    var newValue = value as FixupCollection<ETLExportSchedule>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupETLExportSchedules;
                    }
                }
            }
        }
        private ICollection<ETLExportSchedule> _eTLExportSchedules;

        #endregion
        #region Association Fixup
    
        private void FixupETLExportSchedules(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ETLExportSchedule item in e.NewItems)
                {
                    item.ETLPeriodicity = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ETLExportSchedule item in e.OldItems)
                {
                    if (ReferenceEquals(item.ETLPeriodicity, this))
                    {
                        item.ETLPeriodicity = null;
                    }
                }
            }
        }

        #endregion
    
    }
    */
}
